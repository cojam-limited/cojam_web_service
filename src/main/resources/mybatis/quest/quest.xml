<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.cojam.web.dao.QuestDao">

    <insert id="saveQuest" parameterType="io.cojam.web.domain.Quest">
        INSERT INTO TB_QUEST
        (
            QUEST_KEY, SEASON_CATEGORY_KEY, START_DATE_TIME, END_DATE_TIME, QUEST_TITLE,
            COMPLETED, CREATOR_ADDRESS, QUEST_DESC, HOT, PENDING,
            QUEST_STATUS, MEMBER_KEY, SEASON_KEY, ANSWERS_TX, SNS_URL,
            SNS_ID, FILE_KEY, SNS_TITLE, SNS_DESC, SNS_TYPE, IMAGE_LINK
        )
        VALUES
        (
            #{questKey}, #{seasonCategoryKey}, #{createDateTime}, #{endDateTime}, #{questTitle},
            #{completed}, #{creatorAddress}, #{questDesc}, #{hot}, #{pending},
            #{questStatus}, #{memberKey}, #{seasonKey}, #{answersTx}, #{snsUrl},
            #{snsId}, #{fileKey}, #{snsTitle}, #{snsDesc}, #{snsType}, #{imageLink}
        )
    </insert>
    <insert id="saveQuestAnswer" parameterType="io.cojam.web.domain.QuestAnswer">
        INSERT INTO TB_QUEST_ANSWER
        (
             QUEST_KEY, QUEST_EXAMPLE, ANSWER_TITLE
        )
        VALUES
        (
            #{questKey}, #{questExample}, #{answerTitle}
        )
    </insert>


    <select id="getQuestListAdminCnt" parameterType="io.cojam.web.domain.Quest" resultType="integer">
        SELECT
            COUNT(*) CNT
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        WHERE Q.QUEST_STATUS = #{questStatus}
        <if test='searchText != null and !searchText.equals("")'>
            AND Q.QUEST_TITLE like CONCAT('%',#{searchText},'%')
        </if>
    </select>

    <select id="getQuestListAdmin" parameterType="io.cojam.web.domain.Quest" resultType="io.cojam.web.domain.Quest">
        SELECT
            Q.QUEST_KEY,
            Q.ADJOURN_DATE_TIME,
            Q.ADJOURN_TX,
            Q.APPROVE_DATE_TIME,
            Q.APPROVE_TX,
            Q.SEASON_CATEGORY_KEY,
            Q.START_DATE_TIME,
            Q.END_DATE_TIME,
            Q.QUEST_TITLE,
            Q.COMPLETED,
            Q.CREATOR_ADDRESS,
            Q.QUEST_DESC,
            Q.HOT,
            Q.PENDING,
            Q.QUEST_STATUS,
            Q.SUCCESS_DATE_TIME,
            Q.SUCCESS_TX,
            Q.MEMBER_KEY,
            Q.SEASON_KEY,
            Q.FINISH_DATE_TIME,
            Q.FINISH_TX,
            Q.RETRIEVE_DATE_TIME,
            Q.RETRIEVE_TX,
            Q.ANSWERS_TX,
            Q.DRAFT_DATE_TIME,
            Q.DRAFT_TX,
            Q.SNS_URL,
            Q.SNS_ID,
            Q.SNS_TYPE,
            Q.SNS_TITLE,
            Q.SNS_DESC,
            Q.FILE_KEY,
            Q.CREATE_MEMBER_KEY,
            Q.CREATE_DATE_TIME,
            Q.UPDATE_MEMBER_KEY,
            Q.UPDATE_DATE_TIME,
            Q.TOTAL_AMOUNT,
            Q.IMAGE_LINK,
            C.CATEGORY_NAME,
            S.minimum_pay
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        WHERE QUEST_STATUS = #{questStatus}
        <if test='searchText != null and !searchText.equals("")'>
            AND Q.QUEST_TITLE like CONCAT('%',#{searchText},'%')
        </if>

        <choose>
            <when test='"C".equals(orderType)'>
                ORDER BY C.CATEGORY_NAME ASC
            </when>
            <otherwise>
                ORDER BY Q.CREATE_DATE_TIME DESC
            </otherwise>
        </choose>
        LIMIT #{startIndex}, #{pageSize}
    </select>


    <select id="getQuestListMypage" parameterType="io.cojam.web.domain.Quest" resultType="io.cojam.web.domain.Quest">
        SELECT
            Q.QUEST_KEY,
            Q.ADJOURN_DATE_TIME,
            Q.ADJOURN_TX,
            Q.APPROVE_DATE_TIME,
            Q.APPROVE_TX,
            Q.SEASON_CATEGORY_KEY,
            Q.START_DATE_TIME,
            Q.END_DATE_TIME,
            Q.QUEST_TITLE,
            Q.COMPLETED,
            Q.CREATOR_ADDRESS,
            Q.QUEST_DESC,
            Q.HOT,
            Q.PENDING,
            Q.QUEST_STATUS,
            Q.SUCCESS_DATE_TIME,
            Q.SUCCESS_TX,
            Q.MEMBER_KEY,
            Q.SEASON_KEY,
            Q.FINISH_DATE_TIME,
            Q.FINISH_TX,
            Q.RETRIEVE_DATE_TIME,
            Q.RETRIEVE_TX,
            Q.ANSWERS_TX,
            Q.DRAFT_DATE_TIME,
            Q.DRAFT_TX,
            Q.SNS_URL,
            Q.SNS_ID,
            Q.SNS_TYPE,
            Q.SNS_TITLE,
            Q.SNS_DESC,
            Q.FILE_KEY,
            Q.TOTAL_AMOUNT,
            Q.CREATE_MEMBER_KEY,
            Q.CREATE_DATE_TIME,
            Q.UPDATE_MEMBER_KEY,
            Q.UPDATE_DATE_TIME,
            Q.IMAGE_LINK,
            C.CATEGORY_NAME,
            S.creator_fee,
            S.charity_fee,
            S.maximum_pay,
            S.minimum_pay,
            REPLACE(ROUND(Q.TOTAL_AMOUNT * S.creator_fee / 100,2),'.00','') AS total_creator_Fee,
            REPLACE(ROUND(Q.TOTAL_AMOUNT * S.charity_fee / 100,2),'.00','') AS total_charity_fee
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        WHERE MEMBER_KEY = #{memberKey}
        ORDER BY Q.CREATE_DATE_TIME DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>


    <select id="getQuestListMypageCnt" parameterType="io.cojam.web.domain.Quest" resultType="integer">
        SELECT
           COUNT(*) CNT
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        WHERE MEMBER_KEY = #{memberKey}
        ORDER BY Q.CREATE_DATE_TIME DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>


    <select id="getQuestDetail" parameterType="io.cojam.web.domain.Quest" resultType="io.cojam.web.domain.Quest">
        SELECT
            Q.QUEST_KEY,
            Q.ADJOURN_DATE_TIME,
            Q.ADJOURN_TX,
            Q.APPROVE_DATE_TIME,
            Q.APPROVE_TX,
            Q.SEASON_CATEGORY_KEY,
            Q.START_DATE_TIME,
            Q.END_DATE_TIME,
            Q.QUEST_TITLE,
            Q.COMPLETED,
            Q.CREATOR_ADDRESS,
            Q.QUEST_DESC,
            Q.HOT,
            Q.PENDING,
            Q.QUEST_STATUS,
            Q.SUCCESS_DATE_TIME,
            Q.SUCCESS_TX,
            Q.MEMBER_KEY,
            Q.SEASON_KEY,
            Q.FINISH_DATE_TIME,
            Q.FINISH_TX,
            Q.RETRIEVE_DATE_TIME,
            Q.RETRIEVE_TX,
            Q.ANSWERS_TX,
            Q.DRAFT_DATE_TIME,
            Q.DRAFT_TX,
            Q.SNS_URL,
            Q.SNS_ID,
            Q.SNS_TYPE,
            Q.SNS_TITLE,
            Q.SNS_DESC,
            Q.FILE_KEY,
            Q.CREATE_MEMBER_KEY,
            Q.CREATE_DATE_TIME,
            Q.UPDATE_MEMBER_KEY,
            Q.UPDATE_DATE_TIME,
            Q.TOTAL_AMOUNT,
            Q.IMAGE_LINK,
            C.CATEGORY_NAME,
            IF(now() > Q.END_DATE_TIME,true,false) AS MARKET_CLOSED,
            S.*
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        WHERE Q.QUEST_KEY = #{questKey}
    </select>


    <update id="updateQuestStatus" parameterType="io.cojam.web.domain.Quest">
        UPDATE TB_QUEST
        SET UPDATE_DATE_TIME = now()
        ,UPDATE_MEMBER_KEY = #{updateMemberKey}
        <if test='statusType != null and !statusType.equals("")'>
            <choose>
                <when test='statusType.equals("D")'>
                    ,DRAFT_TX = #{draftTx}
                    ,DRAFT_DATE_TIME = now()
                </when>
                <when test='statusType.equals("P")'>
                    ,PENDING = true
                </when>
                <when test='statusType.equals("I")'>
                    ,QUEST_STATUS = #{questStatus}
                    ,QUEST_DESC = #{questDesc}
                </when>
                <when test='statusType.equals("A")'>
                    ,ANSWERS_TX = #{answersTx}
                </when>
                <when test='statusType.equals("AP")'>
                    ,QUEST_STATUS = #{questStatus}
                    ,APPROVE_DATE_TIME = now()
                    ,APPROVE_TX = #{approveTx}
                </when>
                <when test='statusType.equals("HOT")'>
                    ,HOT = #{hot}
                </when>
                <when test='statusType.equals("FINISH")'>
                    ,COMPLETED = #{completed}
                    ,FINISH_DATE_TIME = now()
                    ,FINISH_TX = #{finishTx}
                </when>
                <when test='statusType.equals("SUCCESS")'>
                    ,QUEST_STATUS = #{questStatus}
                    ,SUCCESS_DATE_TIME = now()
                    ,SUCCESS_TX = #{successTx}
                </when>
                <when test='statusType.equals("ADJOURN")'>
                    ,QUEST_STATUS = #{questStatus}
                    ,ADJOURN_DATE_TIME = now()
                    ,ADJOURN_TX = #{adjournTx}
                    ,QUEST_DESC = #{questDesc}
                </when>
                <when test='statusType.equals("RETRIEVE")'>
                    ,RETRIEVE_DATE_TIME = now()
                    ,RETRIEVE_TX = #{retrieveTx}
                </when>

            </choose>
        </if>
        WHERE QUEST_KEY = #{questKey}
    </update>

    <select id="getQuestAnswerList" parameterType="io.cojam.web.domain.QuestAnswer" resultType="io.cojam.web.domain.QuestAnswer">
        SELECT
            A.QUEST_ANSWER_KEY
            ,A.ANSWER_TITLE
            ,@rownum := @rownum+1 AS ROW_NUM
            ,A.TOTAL_AMOUNT
            ,IFNULL(B.USER_CNT,0) AS USER_CNT
            ,SELECTED
        FROM TB_QUEST_ANSWER A
        LEFT OUTER JOIN (
            SELECT
                QUEST_ANSWER_KEY
                ,COUNT(*) AS USER_CNT
            FROM TB_QUEST_BETTING
            WHERE QUEST_KEY = #{questKey}
            GROUP BY QUEST_ANSWER_KEY
            ) B
        ON A.QUEST_ANSWER_KEY = B.QUEST_ANSWER_KEY
        , (SELECT @rownum :=0) AS R
        WHERE A.QUEST_KEY = #{questKey}
        ORDER BY A.CREATE_DATE_TIME ASC
    </select>


    <select id="getQuestListUser" parameterType="io.cojam.web.domain.Quest" resultType="io.cojam.web.domain.Quest">
        SELECT
            Q.QUEST_KEY,
            Q.ADJOURN_DATE_TIME,
            Q.ADJOURN_TX,
            Q.APPROVE_DATE_TIME,
            Q.APPROVE_TX,
            Q.SEASON_CATEGORY_KEY,
            Q.START_DATE_TIME,
            Q.END_DATE_TIME,
            DATEDIFF(now(),Q.END_DATE_TIME) D_DAY,
            Q.QUEST_TITLE,
            Q.COMPLETED,
            Q.CREATOR_ADDRESS,
            Q.QUEST_DESC,
            Q.HOT,
            Q.PENDING,
            Q.QUEST_STATUS,
            Q.SUCCESS_DATE_TIME,
            Q.SUCCESS_TX,
            Q.MEMBER_KEY,
            Q.SEASON_KEY,
            Q.FINISH_DATE_TIME,
            Q.FINISH_TX,
            Q.RETRIEVE_DATE_TIME,
            Q.RETRIEVE_TX,
            Q.ANSWERS_TX,
            Q.DRAFT_DATE_TIME,
            Q.DRAFT_TX,
            Q.SNS_URL,
            Q.SNS_ID,
            Q.SNS_TYPE,
            Q.SNS_TITLE,
            Q.SNS_DESC,
            Q.FILE_KEY,
            Q.CREATE_MEMBER_KEY,
            Q.CREATE_DATE_TIME,
            Q.UPDATE_MEMBER_KEY,
            Q.UPDATE_DATE_TIME,
            Q.IMAGE_LINK,
            C.CATEGORY_NAME,
            S.creator_fee,
            S.charity_fee,
            S.maximum_pay,
            S.minimum_pay,
            Q.TOTAL_AMOUNT,
            A.ANSWERS_STR,
            IF(DATEDIFF(now(), Q.END_DATE_TIME) > 0 OR FINISH_TX != '' OR FINISH_TX IS NOT NULL, TRUE, FALSE OR COMPLETED) AS FINISHED
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        JOIN (
            SELECT
            A.QUEST_KEY
            ,GROUP_CONCAT( CONCAT(ANSWER_TITLE,'%',TOTAL_AMOUNT,'%',QUEST_ANSWER_KEY) SEPARATOR '^#') AS ANSWERS_STR
            FROM TB_QUEST_ANSWER A
            GROUP BY A.QUEST_KEY
        ) A
        ON Q.QUEST_KEY = A.QUEST_KEY
        WHERE Q.QUEST_STATUS = #{questStatus}
        AND Q.PENDING = false
        <if test='seasonCategoryKey != null and !seasonCategoryKey.equals("")'>
            AND Q.SEASON_CATEGORY_KEY = #{seasonCategoryKey}
        </if>
        <if test='hot'>
            AND Q.HOT = true
        </if>
        ORDER BY Q.CREATE_DATE_TIME DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <select id="getQuestListUserCnt" parameterType="io.cojam.web.domain.Quest" resultType="integer">
        SELECT
            COUNT(*) CNT
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        WHERE QUEST_STATUS = #{questStatus}
        AND Q.PENDING = false
        <if test='seasonCategoryKey != null and !seasonCategoryKey.equals("")'>
            AND SEASON_CATEGORY_KEY = #{seasonCategoryKey}
        </if>
        <if test='hot'>
            AND Q.HOT = true
        </if>
    </select>

    <select id="getQuestDetailUser" parameterType="io.cojam.web.domain.Quest" resultType="io.cojam.web.domain.Quest">
        SELECT
            Q.QUEST_KEY,
            Q.ADJOURN_DATE_TIME,
            Q.ADJOURN_TX,
            Q.APPROVE_DATE_TIME,
            Q.APPROVE_TX,
            Q.SEASON_CATEGORY_KEY,
            Q.START_DATE_TIME,
            Q.END_DATE_TIME,
            DATEDIFF(now(),Q.END_DATE_TIME) D_DAY,
            Q.QUEST_TITLE,
            Q.COMPLETED,
            Q.CREATOR_ADDRESS,
            Q.QUEST_DESC,
            Q.HOT,
            Q.PENDING,
            Q.QUEST_STATUS,
            Q.SUCCESS_DATE_TIME,
            Q.SUCCESS_TX,
            Q.MEMBER_KEY,
            Q.SEASON_KEY,
            Q.FINISH_DATE_TIME,
            Q.FINISH_TX,
            Q.RETRIEVE_DATE_TIME,
            Q.RETRIEVE_TX,
            Q.ANSWERS_TX,
            Q.DRAFT_DATE_TIME,
            Q.DRAFT_TX,
            Q.SNS_URL,
            Q.SNS_ID,
            Q.SNS_TYPE,
            Q.SNS_TITLE,
            Q.SNS_DESC,
            Q.FILE_KEY,
            Q.CREATE_MEMBER_KEY,
            Q.CREATE_DATE_TIME,
            Q.UPDATE_MEMBER_KEY,
            Q.UPDATE_DATE_TIME,
            Q.IMAGE_LINK,
            C.CATEGORY_NAME,
            S.creator_fee,
            S.charity_fee,
            S.creator_pay,
            S.maximum_pay,
            S.minimum_pay,
            Q.TOTAL_AMOUNT,
            A.ANSWERS_STR,
            IF(now() > Q.END_DATE_TIME,true,false) AS MARKET_CLOSED,
            IF(DATEDIFF(now(), Q.END_DATE_TIME) > 0 OR FINISH_TX != '' OR FINISH_TX IS NOT NULL, TRUE, FALSE OR COMPLETED) AS FINISHED
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        JOIN (
            SELECT
            A.QUEST_KEY
        ,GROUP_CONCAT(CONCAT(ANSWER_TITLE, '%', TOTAL_AMOUNT, '%', QUEST_ANSWER_KEY, '%',
        IF(SELECTED, 'true', 'false')) SEPARATOR '^#') AS ANSWERS_STR
            FROM TB_QUEST_ANSWER A
            GROUP BY A.QUEST_KEY
        ) A
        ON Q.QUEST_KEY = A.QUEST_KEY
        WHERE Q.QUEST_KEY = #{questKey}
        <if test='seasonCategoryKey != null and !seasonCategoryKey.equals("")'>
            AND Q.QUEST_STATUS = #{questStatus}
        </if>
    </select>


    <select id="getQuestAnswerDetail" parameterType="io.cojam.web.domain.QuestAnswer" resultType="io.cojam.web.domain.QuestAnswer">
        SELECT
             QUEST_ANSWER_KEY
            ,QUEST_KEY
            ,QUEST_EXAMPLE
            ,ANSWER_TITLE
            ,SELECTED
            ,TOTAL_AMOUNT
        FROM TB_QUEST_ANSWER
        WHERE QUEST_ANSWER_KEY = #{questAnswerKey}
    </select>

    <insert id="saveBetting" parameterType="io.cojam.web.domain.Betting">
        INSERT INTO TB_QUEST_BETTING
        (
            BETTING_COIN, SPENDER_ADDRESS, TRANSACTION_ID, BETTING_STATUS, QUEST_KEY, QUEST_ANSWER_KEY, MEMBER_KEY, RECEIVE_ADDRESS
        )
        VALUES
        (
            #{bettingCoin}, #{spenderAddress}, #{transactionId}, #{bettingStatus}, #{questKey}, #{questAnswerKey}, #{memberKey}, #{receiveAddress}
        )
        <selectKey resultType="string" keyProperty="bettingKey" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateBetting" parameterType="io.cojam.web.domain.Betting">
        UPDATE TB_QUEST_BETTING
        SET TRANSACTION_ID = #{transactionId}
        ,SPENDER_ADDRESS = #{spenderAddress}
        WHERE BETTING_KEY = #{bettingKey}
    </update>

    <update id="updateBettingSuccess" parameterType="io.cojam.web.domain.Betting">
        UPDATE TB_QUEST_BETTING
        SET BETTING_STATUS = #{bettingStatus}
        ,RECEIVE_ADDRESS = #{receiveAddress}
        ,RECEIVE_AMOUNT = #{receiveAmount}
        WHERE BETTING_KEY = #{bettingKey}
    </update>


    <update id="updateQuestAnswer" parameterType="io.cojam.web.domain.QuestAnswer">
        UPDATE TB_QUEST_ANSWER
        SET ANSWER_TITLE = #{answerTitle}
        <if test='selected'>
            ,SELECTED = true
        </if>
        <if test='totalAmount != null and !totalAmount.equals("")'>
            ,TOTAL_AMOUNT = IFNULL((SELECT SUM(BETTING_COIN) FROM TB_QUEST_BETTING WHERE QUEST_ANSWER_KEY = #{questAnswerKey}),0)
        </if>
        WHERE QUEST_ANSWER_KEY = #{questAnswerKey}
    </update>

    <update id="updateQuestTotalAmount" parameterType="io.cojam.web.domain.Quest">
        UPDATE TB_QUEST
        SET TOTAL_AMOUNT = IFNULL((SELECT SUM(BETTING_COIN) FROM TB_QUEST_BETTING WHERE QUEST_KEY = #{questKey}),0)
        WHERE QUEST_KEY = #{questKey}
    </update>


    <select id="getBettingList" parameterType="io.cojam.web.domain.Betting" resultType="io.cojam.web.domain.Betting">
        SELECT
               B.BETTING_COIN,
               B.SPENDER_ADDRESS,
               B.TRANSACTION_ID,
               B.BETTING_STATUS,
               B.QUEST_KEY,
               B.QUEST_ANSWER_KEY,
               B.MEMBER_KEY,
               B.RECEIVE_ADDRESS,
               B.CREATED_DATE_TIME,
               A.ANSWER_TITLE,
               A.ROW_NUM
        FROM TB_QUEST_BETTING B
        JOIN (
            SELECT
            QUEST_ANSWER_KEY
            ,ANSWER_TITLE
            ,@rownum := @rownum+1 AS ROW_NUM
        FROM TB_QUEST_ANSWER, (SELECT @rownum :=0) AS R
        WHERE QUEST_KEY = #{questKey}
        ORDER BY CREATE_DATE_TIME
            ) A
        ON B.QUEST_ANSWER_KEY = A.QUEST_ANSWER_KEY
        WHERE B.QUEST_KEY = #{questKey}
        <if test='questAnswerKey != null and !questAnswerKey.equals("")'>
            AND B.QUEST_ANSWER_KEY = #{questAnswerKey}
        </if>
        ORDER BY CREATED_DATE_TIME DESC
    </select>


    <select id="getMyVotingList" parameterType="io.cojam.web.domain.MyVoting" resultType="io.cojam.web.domain.MyVoting">
        SELECT
            B.BETTING_COIN
            , B.BETTING_KEY
            , B.BETTING_STATUS
            , B.SPENDER_ADDRESS
            , B.TRANSACTION_ID
            , B.QUEST_KEY
            , B.QUEST_ANSWER_KEY
            , B.MEMBER_KEY
            , B.CREATED_DATE_TIME
            , A.ANSWER_TITLE
            , A.TOTAL_AMOUNT  AS ANSWER_TOTAL_AMOUNT
            , Q.QUEST_STATUS
            , Q.QUEST_TITLE
            , Q.SEASON_CATEGORY_KEY
            , Q.TOTAL_AMOUNT
            , C.CATEGORY_NAME
            , Q.COMPLETED
            , Q.PENDING
            ,truncate((Q.TOTAL_AMOUNT
                  - CONVERT(Q.TOTAL_AMOUNT * S.cojam_fee / 100 , DECIMAL )
                  - FLOOR((Q.TOTAL_AMOUNT * S.creator_fee / 100) + S.creator_pay)
                  - FLOOR(Q.TOTAL_AMOUNT * S.charity_fee / 100)) / A.TOTAL_AMOUNT,2) AS magnification
            ,truncate(((Q.TOTAL_AMOUNT
                  - CONVERT(Q.TOTAL_AMOUNT * S.cojam_fee / 100 , DECIMAL )
                  - FLOOR((Q.TOTAL_AMOUNT * S.creator_fee / 100) + S.creator_pay)
                  - FLOOR(Q.TOTAL_AMOUNT * S.charity_fee / 100)) / A.TOTAL_AMOUNT) * B.BETTING_COIN,2) AS magnification_coin
            , IF(B.QUEST_KEY = A.QUEST_KEY AND B.QUEST_ANSWER_KEY = A.QUEST_ANSWER_KEY AND A.SELECTED , TRUE, FALSE)  AS ANSWER_SELECTED
        FROM TB_QUEST_BETTING B
        JOIN TB_QUEST_ANSWER A
        ON B.QUEST_ANSWER_KEY = A.QUEST_ANSWER_KEY
        JOIN TB_QUEST Q
        ON B.QUEST_KEY = Q.QUEST_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        WHERE B.MEMBER_KEY = #{memberKey}
        ORDER BY B.BETTING_KEY DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <select id="getMyVotingListCnt" parameterType="io.cojam.web.domain.MyVoting" resultType="integer">
        SELECT
            COUNT(*) CNT
        FROM TB_QUEST_BETTING B
        WHERE B.MEMBER_KEY = #{memberKey}

    </select>


    <select id="getBettingDetail" parameterType="io.cojam.web.domain.Betting" resultType="io.cojam.web.domain.Betting">
        SELECT
            B.BETTING_COIN,
            B.BETTING_KEY,
            B.SPENDER_ADDRESS,
            B.TRANSACTION_ID,
            B.BETTING_STATUS,
            B.QUEST_KEY,
            B.QUEST_ANSWER_KEY,
            B.MEMBER_KEY,
            B.RECEIVE_ADDRESS,
            B.CREATED_DATE_TIME,
            A.ANSWER_TITLE
        FROM TB_QUEST_BETTING B
        JOIN TB_QUEST_ANSWER A
        ON B.QUEST_ANSWER_KEY = A.QUEST_ANSWER_KEY
        WHERE B.BETTING_KEY = #{bettingKey}
        <if test='memberKey != null and !memberKey.equals("")'>
            AND B.MEMBER_KEY = #{memberKey}
        </if>
    </select>



    <select id="getHomeQuestList" parameterType="io.cojam.web.domain.Quest" resultType="io.cojam.web.domain.Quest">
        SELECT
            Q.QUEST_KEY,
            Q.ADJOURN_DATE_TIME,
            Q.ADJOURN_TX,
            Q.APPROVE_DATE_TIME,
            Q.APPROVE_TX,
            Q.SEASON_CATEGORY_KEY,
            Q.START_DATE_TIME,
            Q.END_DATE_TIME,
            DATEDIFF(now(),Q.END_DATE_TIME) D_DAY,
            Q.QUEST_TITLE,
            Q.COMPLETED,
            Q.CREATOR_ADDRESS,
            Q.QUEST_DESC,
            Q.HOT,
            Q.PENDING,
            Q.QUEST_STATUS,
            Q.SUCCESS_DATE_TIME,
            Q.SUCCESS_TX,
            Q.MEMBER_KEY,
            Q.SEASON_KEY,
            Q.FINISH_DATE_TIME,
            Q.FINISH_TX,
            Q.RETRIEVE_DATE_TIME,
            Q.RETRIEVE_TX,
            Q.ANSWERS_TX,
            Q.DRAFT_DATE_TIME,
            Q.DRAFT_TX,
            Q.SNS_URL,
            Q.SNS_ID,
            Q.SNS_TYPE,
            Q.SNS_TITLE,
            Q.SNS_DESC,
            Q.FILE_KEY,
            Q.CREATE_MEMBER_KEY,
            Q.CREATE_DATE_TIME,
            Q.UPDATE_MEMBER_KEY,
            Q.UPDATE_DATE_TIME,
            C.CATEGORY_NAME,
            S.creator_fee,
            S.charity_fee,
            S.maximum_pay,
            S.minimum_pay,
            Q.TOTAL_AMOUNT,
            A.ANSWERS_STR
        FROM	TB_QUEST Q
        JOIN TB_SEASON S
        ON Q.SEASON_KEY = S.SEASON_KEY
        JOIN TB_SEASON_CATEGORY C
        ON Q.SEASON_CATEGORY_KEY = C.CATEGORY_KEY
        JOIN (
        SELECT
        A.QUEST_KEY
        ,GROUP_CONCAT( CONCAT(ANSWER_TITLE,'%',TOTAL_AMOUNT,'%',QUEST_ANSWER_KEY) SEPARATOR '^#') AS ANSWERS_STR
        FROM TB_QUEST_ANSWER A
        GROUP BY A.QUEST_KEY
        ) A
        ON Q.QUEST_KEY = A.QUEST_KEY
        WHERE Q.QUEST_STATUS = 'APPROVE'
        AND Q.PENDING = false
        AND 0 >= DATEDIFF(now(), Q.END_DATE_TIME)
        AND FINISH_TX IS NULL
        ORDER BY Q.TOTAL_AMOUNT DESC ,Q.CREATE_DATE_TIME DESC
        LIMIT 0, 6
    </select>


    <select id="getBettingChartList" parameterType="io.cojam.web.domain.Betting" resultType="io.cojam.web.domain.Betting">
        SELECT
            QUEST_ANSWER_KEY
            ,ANSWER_TITLE
            ,A.TOTAL_AMOUNT
            ,A.TOTAL_AMOUNT / Q.TOTAL_AMOUNT * 100 AS BETTING_AVG
        FROM TB_QUEST_ANSWER A , TB_QUEST Q
        WHERE A.QUEST_KEY = Q.QUEST_KEY
        AND A.QUEST_KEY = #{questKey}
        ORDER BY QUEST_ANSWER_KEY
    </select>

    <select id="getMyBettingAnswerList" parameterType="io.cojam.web.domain.QuestAnswer" resultType="io.cojam.web.domain.QuestAnswer">
        SELECT
            A.QUEST_ANSWER_KEY
            ,A.ANSWER_TITLE
            ,SELECTED
            ,IF(A.QUEST_ANSWER_KEY = #{questAnswerKey},true,false) AS MY_ANSWER
        FROM TB_QUEST_ANSWER A
        WHERE A.QUEST_KEY = #{questKey}
        ORDER BY A.QUEST_ANSWER_KEY
    </select>
</mapper>