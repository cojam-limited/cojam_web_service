<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.cojam.web.dao.MemberDao">

    <select id="getLoginUserInfo" parameterType="io.cojam.web.domain.LoginDto" resultType="io.cojam.web.domain.AccountDto">
       SELECT
            MEMBER_KEY
            ,MEMBER_ID
            ,MEMBER_NAME
            ,MEMBER_ROLE
            ,MEMBER_PASS AS member_password
            ,CERTIFICATION
        FROM TB_MEMBER
        WHERE MEMBER_ID = #{userId}
    </select>

    <insert id="saveMemberInfo" parameterType="io.cojam.web.domain.Member">
        INSERT INTO TB_MEMBER
        (
            MEMBER_KEY, MEMBER_ID, MEMBER_NAME, MEMBER_EMAIL, MEMBER_PASS
        )
        VALUES
        (
            #{memberKey}, #{memberId}, #{memberName}, #{memberEmail}, #{memberPass}
        )
    </insert>


    <select id="getMemberInfo" parameterType="io.cojam.web.domain.Member" resultType="io.cojam.web.domain.Member">
        SELECT
            MEMBER_KEY
            , MEMBER_ID
            , MEMBER_ROLE
            , MEMBER_NAME
            , MEMBER_EMAIL
            , MEMBER_PASS
            , CERTIFICATION
        FROM TB_MEMBER
        WHERE MEMBER_ID = #{memberId}
    </select>

    <select id="getMemberInfByEmail" parameterType="io.cojam.web.domain.Member" resultType="io.cojam.web.domain.Member">
        SELECT
            MEMBER_KEY
            , MEMBER_ID
            , MEMBER_NAME
            , MEMBER_EMAIL
            , MEMBER_PASS
            , CERTIFICATION
        FROM TB_MEMBER
        WHERE MEMBER_EMAIL = #{memberEmail}
    </select>


    <select id="getMemberInfoByEmailName" parameterType="io.cojam.web.domain.Member" resultType="io.cojam.web.domain.Member">
        SELECT
            MEMBER_KEY
            , MEMBER_ID
            , MEMBER_NAME
            , CERTIFICATION
        FROM TB_MEMBER
        WHERE MEMBER_EMAIL = #{memberEmail}
        AND MEMBER_NAME = #{memberName}
    </select>


    <select id="getMemberPassResetCnt" parameterType="io.cojam.web.domain.Member" resultType="integer">
        SELECT
            COUNT(*) CNT
        FROM TB_MEMBER M , TB_FIND_PASS P
        WHERE P.MEMBER_KEY = M.MEMBER_KEY
        AND M.MEMBER_ID = #{memberId}
        AND P.MEMBER_KEY = #{memberKey}
        AND P.FP_NUMBER = #{fpNumber}
        AND P.CREATED_DATE_TIME > DATE_ADD(NOW(),interval -1 HOUR )
    </select>

    <insert id="saveMemberPassReset" parameterType="io.cojam.web.domain.Member">
       INSERT INTO
            TB_FIND_PASS (MEMBER_EMAIL,MEMBER_KEY, FP_NUMBER)
       VALUES
            (#{memberEmail},#{memberKey},#{fpNumber})
       ON DUPLICATE KEY UPDATE
           FP_NUMBER = #{fpNumber}
    </insert>

    <update id="updateMemberPass" parameterType="io.cojam.web.domain.Member" >
        UPDATE TB_MEMBER
        SET MEMBER_PASS = #{memberPass}
        WHERE MEMBER_KEY = #{memberKey}
    </update>

    <delete id="deletePassHistory" parameterType="io.cojam.web.domain.Member">
        DELETE FROM TB_FIND_PASS
        WHERE MEMBER_KEY = #{memberKey}
    </delete>

    <select id="getServiceUserList" parameterType="io.cojam.web.domain.Member" resultType="io.cojam.web.domain.Member">
        SELECT
            M.MEMBER_KEY
            ,M.MEMBER_ID
            ,M.MEMBER_NAME
            ,M.MEMBER_EMAIL
            ,M.MEMBER_ROLE
            ,M.CREATED_DATE_TIME
            ,M.WALLET_LOCK
            ,M.CERTIFICATION
            ,M.LOCK_TRANSACTION_ID
            ,W.WALLET_ADDRESS
            ,C.FP_NUMBER
        FROM TB_MEMBER M
        LEFT OUTER JOIN TB_WALLET W
        ON M.MEMBER_KEY = W.MEMBER_KEY
        LEFT OUTER JOIN TB_JOIN_CERTIFICATION C
        on M.MEMBER_KEY = C.MEMBER_KEY
        AND M.MEMBER_EMAIL = C.MEMBER_EMAIL
        WHERE MEMBER_ROLE ='USER'
        <if test='searchText != null and !searchText.equals("")'>
            AND (
                M.MEMBER_NAME like CONCAT('%',#{searchText},'%')
                OR
                M.MEMBER_ID like CONCAT('%',#{searchText},'%')
                OR
                M.MEMBER_EMAIL like CONCAT('%',#{searchText},'%')
            )
        </if>
        ORDER BY M.CREATED_DATE_TIME DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <select id="getServiceUserListCnt" parameterType="io.cojam.web.domain.Member" resultType="integer">
       SELECT
           COUNT(*) CNT
        FROM TB_MEMBER M
        WHERE MEMBER_ROLE ='USER'
        <if test='searchText != null and !searchText.equals("")'>
            AND (
            M.MEMBER_NAME like CONCAT('%',#{searchText},'%')
            OR
            M.MEMBER_ID like CONCAT('%',#{searchText},'%')
            OR
            M.MEMBER_EMAIL like CONCAT('%',#{searchText},'%')
            )
        </if>
    </select>


    <select id="getMemberUserList" parameterType="io.cojam.web.domain.Member" resultType="io.cojam.web.domain.Member">
       SELECT
            M.MEMBER_KEY
            ,M.MEMBER_ID
            ,M.MEMBER_NAME
            ,M.MEMBER_EMAIL
            ,M.MEMBER_ROLE
            ,M.CREATED_DATE_TIME
            ,M.WALLET_LOCK
            ,M.LOCK_TRANSACTION_ID
            ,M.CERTIFICATION
            ,W.WALLET_ADDRESS
            ,C.FP_NUMBER
        FROM TB_MEMBER M
        LEFT OUTER JOIN TB_WALLET W
        ON M.MEMBER_KEY = W.MEMBER_KEY
        LEFT OUTER JOIN TB_JOIN_CERTIFICATION C
        on M.MEMBER_KEY = C.MEMBER_KEY
        AND M.MEMBER_EMAIL = C.MEMBER_EMAIL
        WHERE MEMBER_ROLE IN ('ADMIN','VIP')
        ORDER BY M.CREATED_DATE_TIME DESC
        LIMIT #{startIndex}, #{pageSize}
    </select>


    <select id="getMemberUserListCnt" parameterType="io.cojam.web.domain.Member" resultType="integer">
        SELECT
             COUNT(*) CNT
        FROM TB_MEMBER M , TB_WALLET W
        WHERE M.MEMBER_KEY = W.MEMBER_KEY
        AND M.MEMBER_ROLE IN ('ADMIN','VIP')
    </select>

    <update id="updateMemberRole" parameterType="io.cojam.web.domain.Member">
        UPDATE TB_MEMBER
        SET MEMBER_ROLE = #{memberRole}
        ,UPDATED_DATE_TIME = now()
        WHERE MEMBER_KEY = #{memberKey}
    </update>

    <select id="getMemberInfoForMemberKey" parameterType="io.cojam.web.domain.Member" resultType="io.cojam.web.domain.Member">
        SELECT
            MEMBER_KEY
            , MEMBER_ID
            , MEMBER_ROLE
            , MEMBER_NAME
            , MEMBER_EMAIL
            , MEMBER_PASS
            , WALLET_LOCK
            , LOCK_TRANSACTION_ID
            , CERTIFICATION
        FROM TB_MEMBER
        WHERE MEMBER_KEY = #{memberKey}
    </select>

    <insert id="saveRecommend" parameterType="io.cojam.web.domain.Recommend">
        INSERT INTO TB_RECOMMEND
        (
            MEMBER_KEY, RECOMMEND_KEY, M_TRANSACTION_ID, R_TRANSACTION_ID
        )
        VALUES
        (
            #{memberKey}, #{recommendKey}, #{mTransactionId}, #{rTransactionId}
        )
    </insert>

    <update id="updateRecommend" parameterType="io.cojam.web.domain.Recommend">
        UPDATE	TB_RECOMMEND
        <set>
            <if test='recommendKey != null and !recommendKey.equals("")'>RECOMMEND_KEY = #{recommendKey},</if>
            <if test='mTransactionId != null and !mTransactionId.equals("")'>M_TRANSACTION_ID = #{mTransactionId},</if>
            <if test='rTransactionId != null and !rTransactionId.equals("")'>R_TRANSACTION_ID = #{rTransactionId},</if>
        </set>
        ,UPDATE_DATE_TIME = now()
        WHERE	MEMBER_KEY = #{memberKey}
    </update>

    <select id="getRecommendCount" parameterType="string" resultType="integer">
        SELECT
            COUNT(*) CNT
        FROM TB_RECOMMEND
        WHERE	MEMBER_KEY = #{memberKey}
    </select>

    <select id="getMyRecommendInfo" parameterType="string" resultType="io.cojam.web.domain.Member">
        SELECT
           M.MEMBER_KEY
            ,M.MEMBER_ID
            ,M.MEMBER_NAME
        FROM TB_RECOMMEND R
        JOIN TB_MEMBER M
        ON R.RECOMMEND_KEY = M.MEMBER_KEY
        WHERE R.MEMBER_KEY = #{memberKey}
    </select>

    <update id="updateMemberLock" parameterType="hashMap">
        UPDATE	TB_MEMBER
        SET WALLET_LOCK = #{walletLock}
        ,LOCK_TRANSACTION_ID = #{lockTransactionId}
        ,UPDATED_DATE_TIME = now()
        WHERE MEMBER_KEY IN
        <choose>
            <when test="memberList.size != 0">
                <foreach collection="memberList" item="item" index="index" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </when>
        </choose>
    </update>


    <insert id="saveMemberJoinCertification" parameterType="io.cojam.web.domain.Member">
       INSERT INTO
            TB_JOIN_CERTIFICATION (MEMBER_EMAIL,MEMBER_KEY, FP_NUMBER)
       VALUES
            (#{memberEmail},#{memberKey},#{fpNumber})
       ON DUPLICATE KEY UPDATE
           FP_NUMBER = #{fpNumber}
           ,MEMBER_EMAIL = #{memberEmail}
           ,CREATED_DATE_TIME = now()
    </insert>


    <select id="getMemberJoinCertification" parameterType="io.cojam.web.domain.Member" resultType="io.cojam.web.domain.Member">
       SELECT
            MEMBER_EMAIL
            ,MEMBER_KEY
            ,FP_NUMBER
            ,CREATED_DATE_TIME
       FROM TB_JOIN_CERTIFICATION
       WHERE MEMBER_KEY = #{memberKey}
    </select>

    <delete id="removeMemberJoinCertification" parameterType="io.cojam.web.domain.Member">
       DELETE FROM TB_JOIN_CERTIFICATION
       WHERE MEMBER_KEY = #{memberKey}
    </delete>

    <update id="updateMemberJoinCertification" parameterType="io.cojam.web.domain.Member">
        UPDATE TB_MEMBER
        SET CERTIFICATION = true
        WHERE MEMBER_KEY = #{memberKey}
        AND CERTIFICATION = false
    </update>
</mapper>